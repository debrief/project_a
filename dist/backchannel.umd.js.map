{"version":3,"file":"backchannel.umd.js","sources":["../src/index.ts"],"sourcesContent":["/**\n * BackChannel Plugin\n * A lightweight JavaScript plugin for capturing and reviewing feedback on static web content\n */\n\n// Types\nexport interface BackChannelConfig {\n  targetSelector?: string;\n  requireInitials?: boolean;\n  allowExport?: boolean;\n  storageKey?: string;\n}\n\n// Main class\nclass BackChannel {\n  private config: BackChannelConfig;\n\n  constructor(config: BackChannelConfig = {}) {\n    this.config = {\n      targetSelector: '.reviewable',\n      requireInitials: true,\n      allowExport: true,\n      ...config\n    };\n    \n    console.log('BackChannel initialized with config:', this.config);\n  }\n\n  public init(): void {\n    window.addEventListener('load', () => {\n      console.log('BackChannel plugin loaded');\n      // Implementation will be added in future tasks\n    });\n  }\n}\n\n// Export as global and module\nconst instance = new BackChannel();\n\n// Create global instance\nif (typeof window !== 'undefined') {\n  (window as any).BackChannel = {\n    init: (config: BackChannelConfig = {}) => {\n      Object.assign(instance, new BackChannel(config));\n      instance.init();\n      return instance;\n    }\n  };\n}\n\nexport default instance;"],"names":["BackChannel","config","instance"],"mappings":"4NAcA,MAAMA,CAAY,CACR,OAER,YAAYC,EAA4B,GAAI,CAC1C,KAAK,OAAS,CACZ,eAAgB,cAChB,gBAAiB,GACjB,YAAa,GACb,GAAGA,CAAA,EAGL,QAAQ,IAAI,uCAAwC,KAAK,MAAM,CACjE,CAEO,MAAa,CAClB,OAAO,iBAAiB,OAAQ,IAAM,CACpC,QAAQ,IAAI,2BAA2B,CAEzC,CAAC,CACH,CACF,CAGA,MAAMC,EAAW,IAAIF,EAGrB,OAAI,OAAO,OAAW,MACnB,OAAe,YAAc,CAC5B,KAAM,CAACC,EAA4B,MACjC,OAAO,OAAOC,EAAU,IAAIF,EAAYC,CAAM,CAAC,EAC/CC,EAAS,KAAA,EACFA,EACT"}